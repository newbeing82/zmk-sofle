#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC    &kp N1    &kp N2    &kp N3  &kp N4     &kp N5       &none  &kp N6     &kp N7     &kp N8     &kp N9    &kp N0     &kp BACKSPACE
&kp GRAVE  &kp Q     &kp W     &kp E   &kp R      &kp T        &none  &kp Y      &kp U      &kp I      &kp O     &kp P      &kp BSLH
&kp TAB    &kp A     &kp S     &kp D   &kp F      &kp G        &none  &kp H      &kp J      &kp K      &kp L     &kp SEMI   &kp APOS
&kp LSHFT  &kp Z     &kp X     &kp C   &kp V      &kp B        &none  &kp N      &kp M      &kp COMMA  &kp DOT   &kp FSLH   &kp RSHFT
&none      &kp LGUI  &kp LALT  &mo 1   &kp LCTRL  &kp SPACE    &none  &kp SPACE  &kp ENTER  &mo 1      &kp RALT  &kp RCTRL
            >;

            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&studio_unlock  &kp F1           &kp F2           &kp F3         &kp F4                &kp F5                   &none  &kp F6     &kp F7    &kp F8           &kp F9          &kp F10          &trans
&bt BT_CLR_ALL  &kp CAPS         &kp LS(MINUS)    &kp LS(EQUAL)  &kp LS(LEFT_BRACKET)  &kp LS(RIGHT_BRACKET)    &none  &kp PG_UP  &kp HOME  &kp UP           &kp END         &kp F11          &trans
&trans          &kp K_APP        &kp MINUS        &kp EQUAL      &kp LEFT_BRACKET      &kp RIGHT_BRACKET        &none  &kp PG_DN  &kp LEFT  &kp DOWN         &kp RIGHT       &kp F12          &trans
&trans          &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &bl BL_DEC     &bl BL_INC            &none                    &none  &kp INS    &kp DEL   &kp PRINTSCREEN  &kp SCROLLLOCK  &kp PAUSE_BREAK  &trans
&none           &trans           &trans           &trans         &trans                &trans                   &none  &trans     &trans    &trans           &trans          &trans
            >;

            display-name = "layer1";
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none  &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &none  &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &none  &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &none  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &none  &trans  &trans  &trans      &trans     &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
